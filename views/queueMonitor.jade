extends layout

block gcsCss
	link(rel='stylesheet', href='/stylesheets/alertify.core.css')
	link(rel='stylesheet', href='/stylesheets/alertify.default.css')
	//-link(rel='stylesheet', href='/stylesheets/gcsOmniWindow.css')

block gcsNavbarItems
	ul.nav.navbar-nav
		if(role)
			li.active
				a(href="#")
					i.icon-desktop.icon-large 
					|&nbsp;Queues
			li
				a(href="/userAdmin")
					i.icon-user.icon-large 
					|&nbsp;Users
			li
				a(href="/reports")
					i.icon-file-text.icon-large 
					|&nbsp;Reports
		else
			li
				a(href="/reportsAgents")
					i.icon-archive.icon-large 
					|&nbsp;Agents
		li
			a(href="/logout")
				i.icon-off.icon-large 
				|&nbsp;Logout
		li
			a(data-toggle="modal" href="#helpModal")
				i.icon-question-sign.icon-large
				|&nbsp;Help

block content
	div.modal.fade#helpModal(tabindex="-1" role="dialog" aria-labeledby="helpModalLabel" aria-hidden="true")
		div.modal-dialog
			div.modal-content
				div.modal-header
					button.close(type="button" data-dismiss="modal" aria-hidden="true")
						i.icon-remove
					h4#helpModalLabel
						|GCS QueueMonitor Help
				div.modal-body
					ul
						li To Hide a full Queue Click on the Queue's top label
						li To Select an Agent Click on the agent's icon
						li To Remove an Agent from a Queue, select it and click the remove button
						li To Pause an Agent in a Queue, select it and click the pause button
						li To Monitor an Agent, select it, click the Monitor button, enter the Supervisor's extension and click "Create", a call will be sent to the Supervisor with the Agent's audio
				div.modal-footer
					button.btn.btn-default(type="button" data-dismiss="modal")
						|Close
	div.modal.fade#chanspyModal(tabindex="-1" role="dialog" aria-labeledby="chanspyModalLabel" aria-hidden="true")
		div.modal-dialog
			div.modal-content(data-bind="with: selectedAgent")
				div.modal-header
					button.close(type="button" data-dismiss="modal" aria-hidden="true")
				h4#chanspyModalLabel
					|Please enter the supervisor's extension
				div.modal-body
					div.spyAgentFormContainer
						form#spyFormMobil(data-bind="submit: spyAgent, checkStatusForSpy: status()")
							div
								label Supervisor Extension:
								input(type="text" id="spyDstMobil" name="supExtension" placeholder="Enter the Supervisor Extension")
							button.gcsBtn(type="submit") Create
							button.gcsBtn(data-dismiss="modal") Cancel
				div.modal-footer
					button.btn.btn-default(type="button" data-dismiss="modal")
						|Close

	div.row#dataContainer
		div.col-md-8.col-sm-6
			<!-- ko foreach: $data.queues -->
			<!-- ko if: "default" != id() -->
			div.queueHead(data-bind="attr: {'id': id}")
				div.queueStats
					div.queueID(data-bind="click: hideQueue, updateViewPrefs: id()")
						|Agents in Queue 
						span(data-bind="text: id")
					div.statsData(data-bind="click: detailedQueue")
						div.stat
							|Completed: 
							span.statValue(data-bind="text: completed")
						div.stat
							|Abandoned: 
							span.statValue(data-bind="text: abandonedDay")
						div.stat
							|Hold Time: 
							span.statValue(data-bind="text: holdtime")
						div.stat
							|Wait Time: 
							span.statValue(data-bind="text: waiting_calls")

					
						div.agentDrop
							ul.agentsUl.infoACDrop
								<!-- ko if: statsCalls().length < 1 -->
								li
									span.infoLabel No abandoned calls
								<!-- /ko -->
								<!-- ko ifnot: statsCalls().length < 1 -->
								<!-- ko foreach: statsCalls -->
								li
									span.infoLabel From:&nbsp
									span(data-bind="text: connectedlinename")
									span.infoLabel &nbspDate:&nbsp
									span(data-bind="text: date")
								<!-- /ko -->
								<!-- /ko -->

				<!-- ko if: agents().length < 1 -->
				div.emptyAlert(data-bind="visible: agents().length < 1")
					| Empty Queue
				<!-- /ko -->

				div.agentsContainer(data-bind='foreach: agents')
					div.agent
						div.agentTop(data-bind="click: markSelectedAgent")
							div.agentStatus
								button.btn-gcs(data-bind="visible: selected")
									i.icon-arrow-right
								div.agentIcon(data-bind="statusIcon: status()")
								div.agentTopName
									span(data-bind="text: name")
								div.agentTopId
									|ext.
									span(data-bind="text: id")
									span(data-bind="visible: paused() == 1")
										| &nbsp;--> Paused
						div.agentDrop
							ul.agentsUl.infoContainerUl
								li.agentName
									i.icon-user 
									span(data-bind="text: name")
								li(data-bind="visible: paused() == 1")
									i.icon-pause
									|&nbsp;Paused
								li
									span.infoLabel The agent is now:&nbsp
									span(data-bind="text: statusName")
									span.infoIcon(data-bind="statusIcon: status()")
								li
									span.infoLabel And is talking to:&nbsp;
									span(data-bind="text: caller")
									span.infoIcon.icon-stack
										i.icon-circle-blank.icon-stack-base
										i.icon-comments-alt
								li
									span.infoLabel The last call was:&nbsp;
									span(data-bind="text: lastCall")
									span.infoIcon.icon-stack
										i.icon-circle-blank.icon-stack-base
										i.icon-time
								li
									span.infoLabel Has taken:&nbsp;
									span(data-bind="text: taken")
									span.infoLabel &nbsp;calls
									span.infoIcon.icon-stack
										i.icon-circle-blank.icon-stack-base
										i.icon-check
								
							button.actionBtn(data-bind="click: removeAgent")
								span.icon-stack
									i.icon-circle.icon-stack-base.actionBtnBase
									i.icon-remove.actionBtn
							button.actionBtn(data-bind="click: pauseAgent")
								span.icon-stack
									i.icon-circle.icon-stack-base.actionBtnBase
									i.icon-pause.actionBtn
							button.actionBtn(data-bind="enable: isTalking(status())" data-toggle="modal" href="#chanspyModal")
								span.icon-stack
									i.icon-circle.icon-stack-base.actionBtnBase
									i.icon-headphones.actionBtn

			<!-- /ko -->
			<!-- /ko -->
		//-This info Window should only be sent to desktop and tablet users, View renderer needs to be upgraded
		div.col-md-4.col-sm-6.hidden-xs.infoContainer
			//-selectedAgent is an extended observable that will hold the selected agent information
			div(data-bind="with: selectedAgent")
				div#infoAgentData(data-bind="fadeVisible: queue")
					center
						h1
							span(data-bind="fadeVisible: queue")
								i.icon-user &nbsp;
							span(data-bind="text: name")
					div.infoValidData(data-bind="fadeVisible: queue")
						center
							h4
								span.infoLabel Information for queue:&nbsp;
								span(data-bind="text: queue")
							h2
								span(data-bind="text: id")
								span(data-bind="fadeVisible: paused() == 1")
									|&nbsp;/&nbsp;Paused
							button.gcsBtn(data-bind="click: clearAgentData")
								|Dismiss
						ul.infoContainerUl
							li
								span.infoLabel The agent is now:&nbsp
								span(data-bind="text: statusName")
								span.infoIcon(data-bind="statusIcon: status()")
							li
								span.infoLabel And is talking to:&nbsp;
								span(data-bind="text: caller")
								span.infoIcon.icon-stack
									i.icon-circle-blank.icon-stack-base
									i.icon-comments-alt
							li
								span.infoLabel The last call was:&nbsp;
								span(data-bind="text: lastCall")
								span.infoIcon.icon-stack
									i.icon-circle-blank.icon-stack-base
									i.icon-time
							li
								span.infoLabel Has taken:&nbsp;
								span(data-bind="text: taken")
								span.infoLabel &nbsp;calls
								span.infoIcon.icon-stack
									i.icon-circle-blank.icon-stack-base
									i.icon-check

				div#actionData(data-bind="fadeVisible: queue")
					center
						table#actionBtnTable
							tr
								td
									button.actionBtn(data-bind="click: removeAgent, enable: queue")
											span.icon-stack
												i.icon-circle.icon-stack-base.actionBtnBase
												i.icon-trash.actionBtnIcon

								td
									button.actionBtn(data-bind="click: pauseAgent, enable: queue")
											span.icon-stack
												i.icon-circle.icon-stack-base.actionBtnBase
												i.icon-pause.actionBtnIcon

								td
									button.actionBtn(data-bind="click: toggleSpyForm, enable: isTalking(status())")
											span.icon-stack
												i.icon-circle.icon-stack-base.actionBtnBase
												i.icon-headphones.actionBtnIcon
							tr
								td
									|Remove
								td
									|Pause
								td
									|Monitor

					div.spyAgentFormContainer
						form#spyForm(data-bind="submit: spyAgent, checkStatusForSpy: status()")
							div
								label Supervisor Extension:
								input(type="text" id="spyDst" name="supExtension" placeholder="Enter the Supervisor Extension")
							button.gcsBtn(type="submit") Create
							button.gcsBtn(data-bind="click: toggleSpyForm") Cancel		
		
			div(data-bind="with: selectedQueue")
				div#infoQueueData
					center
						h1
							span(data-bind="fadeVisible: id != ''")
								i.icon-group &nbsp;
							span(data-bind="text: id")
					div.infoValidData(data-bind="fadeVisible: id != ''")
						center
							button.gcsBtn(data-bind="click: clearQueueData")
								|Dismiss
						ul.infoAbandonedCalls
							li(style="border: none;")
								span.infoLabel Abandoned calls:&nbsp
								span(data-bind="text: abandonedDay")
							br
							
							div.abandonedCalls(data-bind='foreach: statsCalls')
								li.infoQueueLi.liLeft
									span.infoLabel From:&nbsp
									span(data-bind="text: connectedlinename")
								li.infoQueueLi.liRigth
									span.infoLabel Date:&nbsp
									span(data-bind="text: date")

block gcsScripts
	script(src="/javascripts/components/alertify.min.js")
	script(src="/javascripts/components/knockout-2.3.0.js")
	script(src="/javascripts/components/knockout.viewmodel.min.js")
	script(src="/socket.io/socket.io.js")
	//-script(src="/javascripts/jquery.omniwindow.js")
	script(src="/javascripts/app/queueMonitorClient.js")